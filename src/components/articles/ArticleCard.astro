---
import type { ArticleEntry as Article, PageEntry as Page } from "@/types/index";
import { IconCalendar, IconArrowRight } from "@tabler/icons-react";

export interface Props {
  article: Article;
}

const article = Astro.props?.article?.data;

// Format date for display
const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
};

// Get the best image format available
const getImageUrl = (cover: Article["data"]["cover"]) => {
  // if (cover?.formats?.medium) return cover.formats.medium.url;
  // if (cover?.formats?.small) return cover.formats.small.url;
  // if (cover?.formats?.large) return cover.formats.large.url;
  // return cover?.url || cover?.data?.attributes?.url;
  return cover?.url;
};

const imageUrl = getImageUrl(article.cover);
---

<article
  class="group relative bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-500 hover:-translate-y-2 border border-gray-100"
>
  <a href={`/articles/${article.slug}`} class="block h-full">
    <div class="relative h-48 overflow-hidden">
      <img
        src={imageUrl}
        alt={article.Title}
        loading="lazy"
        class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-700"
      />
      <div
        class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"
      >
      </div>
    </div>

    <div class="p-6 flex flex-col h-full">
      <div class="flex items-center justify-between mb-4">
        <div class="flex items-center text-gray-500 text-sm">
          <IconCalendar size={16} className="mr-2" />
          <time datetime={article.publishedAt}>
            {formatDate(article.publishedAt)}
          </time>
        </div>

        {
          article.Tags && article.Tags.length > 0 && (
            <div class="flex gap-2">
              {article.Tags.slice(0, 2).map((tag: Article["data"]["Tags"]) => (
                <span class="px-3 py-1 bg-gradient-to-r from-purple-500 to-pink-500 text-white text-xs font-semibold rounded-full">
                  {tag.name}
                </span>
              ))}
            </div>
          )
        }
      </div>

      <h3
        class="text-xl font-bold text-purple-700 mb-3 group-hover:text-purple-600 transition-colors duration-300 line-clamp-2 dark:text-gray-900"
      >
        {article.Title}
      </h3>

      <p
        class="text-gray-600 text-sm leading-relaxed mb-4 flex-grow line-clamp-3"
      >
        {
          article.SEO?.metaDescription ||
            `Discover insights about ${article.Title}`
        }
      </p>

      <div
        class="flex items-center text-purple-600 font-semibold text-sm group-hover:text-purple-700 transition-colors"
      >
        <span>Read more</span>
        <IconArrowRight
          size={16}
          className="ml-2 group-hover:translate-x-1 transition-transform duration-300"
        />
      </div>
    </div>
  </a>
</article>
